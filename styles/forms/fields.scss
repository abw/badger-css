/* forms/fields.scss */
.field {
  margin-bottom: var(--margin-bottom);
  // label:not(.checkbox, .radio, :has(input[type=checkbox]),:has(input[type=radio])) {
  #{$standard-label} {
    display: block;
    margin-bottom: var(--label-margin);
    color: var(--label-color);
    font-size: var(--label-size);
    line-height: 1.5;
    // padding-left: calc(var(--padding-h) + var(--border-width));
  }
  label:not(.checkbox, .radio)::after {
    display: none;
    margin-left: 1em;
    font-size: 0.8em;
    padding: 0em 0.25em;
    position: relative;
    bottom: 0.1em;
    border-radius: 0.25em;
    color: var(--tag-color);
    background-color: var(--tag-background);
    border: 1px solid var(--tag-border);
  }
  div.help {
    margin-top: var(--help-margin);
    font-size: var(--help-size);
    color: var(--help-color);
    line-height: 1.5;
    // padding-left: calc(var(--padding-h) + var(--border-width));
  }
  &.valid div.help {
    --help-prefix: var(--valid-help-prefix);
  }
  &.invalid div.help {
    --help-prefix: var(--invalid-help-prefix);
  }
  &.valid div.help, &.invalid div.help {
    &::before {
      content: var(--help-prefix);
      color: var(--help-prefix-color);
      margin-right: 0.5em;
    }
  }
  &.required label:not(:has(input[type=checkbox]),:has(input[type=radio]))::after {
    display: inline-block;
    content: var(--required-text);
    --tag-color:      var(--required-color);
    --tag-border:     var(--required-border);
    --tag-background: var(--required-background);
  }
  &.optional label:not(:has(input[type=checkbox]),:has(input[type=radio]))::after {
    display: inline-block;
    content: var(--optional-text);
    --tag-color:      var(--optional-color);
    --tag-border:     var(--optional-border);
    --tag-background: var(--optional-background);
  }
  .input {
    display: inline-flex;
    border-radius: var(--border-radius);
    &.wide {
      input:not([type=checkbox]):not([type=radio]), textarea, select {
        flex-basis: 100%;
      }
    }
    .prefix, .suffix {
      padding: var(--padding-v) var(--padding-h);
      border: var(--border-width) solid var(--border-color);
      border-radius: var(--border-radius);
      color: var(--fix-color);
      background-color: var(--fix-background);
    }
    .prefix {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      border-right-width: 0;
    }
    .suffix {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      border-left-width: 0;
    }
    &:has(.prefix) {
      #{$standard-input-types}, #{$bordered-switch-input-types} {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        &.focus, &:focus, &:has(:focus) {
          box-shadow: none;
          // outline: none !important;
        }
      }
    }
    &:has(.suffix) {
      #{$standard-input-types}, #{$bordered-switch-input-types}  {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        &.focus, &:focus, &:has(:focus) {
          box-shadow: none;
          // outline: none !important;
        }
      }
    }
    &:hover, &:hover .prefix, &:hover .suffix {
      --border-color: var(--hover-border-color);
    }
    // &.focus, &:has(:focus), &:has(.focus) {
    &.focus, &:focus-within {
      box-shadow: var(--focus-ring);
      // outline: var(--focus-outline) !important;
      // outline-offset: var(--focus-ring-gap);
      .prefix, .suffix {
        border-color: var(--focus-border-color);
      }
      #{$standard-input-types}, #{$bordered-switch-input-types}  {
        border-color: var(--focus-border-color);
      }
    }
  }
}
// [class*=grid] > .field {
  // margin-bottom: 0;
// }

