/* forms/switches.scss */
:where(#{$switch-input-types}) {
  --color:            inherit;
  --border-color:     transparent;
  --background-color: inherit;
}

#{$switch-input-types} {
  display: inline-flex;
  align-items: center;
  padding: var(--padding-v) var(--padding-h);
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  outline: none !important;
  transition: all 0.25s;
  font-weight: normal;
  font-style: normal;
  font-size: 1em;
  line-height: var(--line-height);
  flex-basis: 100%;
  align-items: center;
  white-space: nowrap;
  transition: all var(--transition-time);
  color: var(--color);
  accent-color: var(--accent-color);
  user-select: none;
  cursor: pointer;
  input {
    margin: 0 0.5rem 0 0;
    height: 1em;
    width: 1em;
    padding: 0;
    line-height: var(--line-height);
    line-height: 2;
    outline: none;
    flex-basis: 1em;
    vertical-align: -.125em;
    vertical-align: -.5em;
  }
  span {
    text-align: left;
    font-size: 1em;
    line-height: 1;
    padding: 0 0.5em;
  }
  &:hover {
    color: var(--hover-color);
  }
  &.border {
    background: var(--background);
    &:hover {
      --color: var(--input-hover-color);
      --border-color: var(--input-hover-border-color);
      --background-top: var(--input-hover-background-top);
      --background-bottom: var(--input-hover-background-bottom);
    }
  }
  &:has(:focus):not(.no-focus) {
    --color:             var(--input-focus-color);
    --border-color:      var(--input-focus-border-color);
    --background-top:    var(--input-focus-background-top);
    --background-bottom: var(--input-focus-background-bottom);
    box-shadow: var(--focus-ring);
  }
  &.disabled {
    cursor: not-allowed;
    opacity: var(--disabled-opacity);
  }
  &.start {
    align-items: flex-start;
  }
  &.baseline {
    align-items: baseline;
    input {
      position: relative;
      top: 0.125em;
    }
  }
}
