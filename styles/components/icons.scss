$fill-color-prefix:    'flc' !default;
$stroke-color-prefix:  'stc' !default;
$fill-dark-prefix:     'fld' !default;
$stroke-dark-prefix:   'std' !default;

svg {
  .fill-fg {
    fill: var(--color);
  }
  .fill-bg {
    fill: var(--background-color);
  }
  .stroke-fg {
    stroke: var(--color);
  }
  .stroke-bg {
    stroke: var(--background-color);
  }
  &.icon {
    overflow: visible;
    box-sizing: content-box;
    display: inline-block;
    height: 1em;
    font-size: 1em;
    line-height: 1;
    vertical-align: -.125em;
    text-align: center;
    &.spin {
      animation:
        linear
        var(--animation-time, 2s)
        var(--animation-repeat, infinite)
        spin;
      animation-direction:
        var(--animation-direction, normal);
    }
    &.beat {
      animation:
        linear
        var(--animation-time, 1s)
        var(--animation-repeat, infinite)
        beat;
      &.fast {
        --animation-time: 0.5s;
      }
      &.slow {
        --animation-time: 2s;
      }
    }
    &.reverse {
      --animation-direction: reverse;
    }
    &.fast {
      --animation-time: 1s;
    }
    &.slow {
      --animation-time: 4s;
    }
    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
    @keyframes beat {
      0%, 70% {
        transform: scale(1);
      }
      10% {
        transform: scale(var(--beat-scale, 1.25));
      }
    }
  }
}

@media (prefers-reduced-motion: reduce) {
  svg.icon {
    &.spin {
      --animation-time: 0;
      --animation-repeat: 0;
    }
  }
}

@each $stop in $color-stops {
  .fill-#{$stop}, .#{$fill-color-prefix}-#{$stop} {
    fill: var(--color-#{$stop}) !important;
  }
  .stroke-#{$stop}, .#{$stroke-color-prefix}-#{$stop} {
    stroke: var(--color-#{$stop}) !important;
  }
}

#{$dark-theme} {
@each $stop in $color-stops {
  .fill-dark-#{$stop}, .#{$fill-dark-prefix}-#{$stop} {
    fill: var(--color-#{$stop}) !important;
  }
  .stroke-dark-#{$stop}, .#{$stroke-dark-prefix}-#{$stop} {
    stroke: var(--color-#{$stop}) !important;
  }
}
}