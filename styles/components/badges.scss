/*-- components/badges.scss --*/
@use "sass:math";
$badge-padding-v:         0.25em !default;
$badge-padding-h:         0.75em !default;
$badge-border-width:      1px    !default;
$badge-border-radius:     1em    !default;
$badge-compact-radius:    0.25em !default;
$badge-tag-radius:        $unit-radius !default;
$badge-hole-size:         $unit-radius !default;
$badge-tag-padding-left:  1.5em !default;
$badge-tag-padding-right: 0.5rem !default;

:where(.badge) {
  --border-radius:      #{$badge-border-radius};
  --border-width:       #{$badge-border-width};
  --tag-radius:         #{$badge-tag-radius};
  --tag-padding-left:   #{$badge-tag-padding-left};
  --tag-padding-right:  #{$badge-tag-padding-right};
  --hole-size:          #{$badge-hole-size};
  --color:              var(--color-45);
  --background-color:   var(--color-95);
  --border-color:       var(--color-75);
  --hole-color:         var(--color-100);
  --fix-color:          var(--color-40);
  --fix-background:     var(--color-90);
  --fixed-background:   var(--color-100);
}
.badge {
  --padding-v: #{$badge-padding-v};
  --padding-h: calc(var(--unit-padding-h) + (var(--border-radius) / 2));
  --inner-border-radius: calc(var(--border-radius) - var(--border-width));
  --inner-padding-h:     calc(var(--padding-h) * 0.75);
  display: inline-block;
  position: relative;
  padding: var(--padding-v) var(--padding-h);
  color: var(--color);
  background-color: var(--background-color);
  border: var(--border-width) solid var(--border-color);
  border-radius: var(--border-radius);
  text-wrap: nowrap;
  line-height: 1;
  &.compact {
    --border-radius: #{$badge-compact-radius};
    --padding-v:     #{$badge-padding-v * 0.75};
    --padding-h:     #{math.div($badge-padding-h, 2)};
  }
  &.tag {
    border-radius: var(--border-radius) var(--tag-radius) var(--tag-radius) var(--border-radius);
    padding-left: var(--tag-padding-left);
    padding-right: var(--tag-padding-right);
    &::after {
      position: absolute;
      left: 0.5em;
      top: 50%;
      height: 0.5em;
      width: 0.5em;
      content: '';
      background-color: var(--hole-color);
      border: 2px solid var(--border-color);
      border-radius: 0.25em;
      transform: translate(0, -50%);
    }
  }
  &:has(.prefix, .suffix) {
    background-color: var(--fixed-background);
    display: inline-flex;
    .prefix, .suffix {
      color: var(--fix-color);
      background-color: var(--fix-background);
      margin: calc(0px - var(--padding-v)) 0;
      padding: var(--padding-v) var(--padding-h);
    }
    .prefix {
      margin-right: var(--padding-h);
      margin-right: var(--inner-padding-h);
      padding-right: var(--inner-padding-h);
      border-top-left-radius: var(--inner-border-radius);
      border-bottom-left-radius: var(--inner-border-radius);
      border-right: 1px solid var(--border-color);
    }
    .suffix {
      margin-left: var(--inner-padding-h);
      padding-left: var(--inner-padding-h);
      border-top-right-radius: var(--inner-border-radius);
      border-bottom-right-radius: var(--inner-border-radius);
      border-left: 1px solid var(--border-color);
    }
    &.compact .prefix {
      padding-right: var(--padding-h);
      margin-right: var(--padding-h);
    }
    &.compact .suffix {
      padding-left: var(--padding-h);
      margin-left: var(--padding-h);
    }
  }
  &:has(.prefix) {
    padding-left: 0;
  }
  &:has(.suffix) {
    padding-right: 0;
  }
}

#{$dark-theme} {
  .badge {
    --color:            var(--color-55);
    --background-color: var(--color-10);
    --border-color:     var(--color-40);
    --hole-color:       var(--color-0);
    --fix-color:          var(--color-60);
    --fix-background:     var(--color-20);
    --fixed-background:   var(--color-10);
  }
}

